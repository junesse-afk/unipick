<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.itwillbs</groupId>
	<artifactId>UNIPICK</artifactId>
	<name>SpringTest1</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<!-- 자바(JRE)의 기본 버전을 속성으로 관리 -->
		<java-version>11</java-version>
		<!-- 스프링의 기본 버전을 속성으로 관리 -->
		<org.springframework-version>5.3.24</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	
	<!-- Maven에서 관리하는 의존성 패키지(라이브러리)를 관리하는 위치 -->
	<!-- 각 라이브러리는 <dependencies> 태그 내에 각각의 <dependency> 태그로 관리  -->
	<dependencies>
		
		<!-- 
		개발자가 별도로 필요한 라이브러리 추가할 경우
		<dependencies> 태그 내에 <dependency> 태그로 라이브러리 추가 (순서 무관)
		Maven Repository 웹사이트에서 필요한 라이브러리 검색 가능
		추가된 모든 라이브러리는 [프로젝트 - Maven Dependencies] 항목에서 확인
		 -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>5.2.3</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>5.2.3</version>
		</dependency>
		
		 
		 <dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-web</artifactId>
    		<version>5.3.30</version> <!-- 버전은 프로젝트에 맞게 조정 -->
		</dependency>
		 
		<!-- 1. DTO(VO) 클래스 작성을 자동화 해주는 Lombok(롬복) -->		
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.24</version>
		    <scope>provided</scope>
		</dependency>
		
		<!--  MySQL - JDBC 연동에 필요한 라이브러리 -->
		<!--  2. MySQL 연동에 사용되는 MySQL Connector 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
		    <groupId>com.mysql</groupId>
		    <artifactId>mysql-connector-j</artifactId>
		    <version>8.3.0</version>
		</dependency>
		
		<!-- 3. 스프링에서 JDBC 연동에 필요한 기능을 제공하는 spring-jdbc 라이브러리 -->
		<!--  기존 스프링 버전 ${org.springframework-version} 그대로 사용 -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
				
		<!-- 4. 커넥션 풀을 관리하는 HikariCP 라이브러리 추가 (Tomcat DBCP 대용) -->		
		<!-- Tomcat DBCP 에 비해 가볍고, 빠르고, 안정적 -->
		<!-- Java 11 이상일 때 6.x.x(또는 5.x.x) 버전 사용  -->
		<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>6.2.1</version>
		</dependency>
				
		<!-- 5. MyBatis 활용에 필요한 라이브러리 추가 -->
		<!-- 5-1) MyBatis 기본 라이브러리(최신 버전 사용) -->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.16</version>
		</dependency>
				
		<!-- 5-2) MyBatis - Spring 연동 라이브러리 -->
		<!-- 주의! 3.x.x 버전 사용 시 JDK 11에서 오류 발생함(지원되지 않음) -->		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>2.1.2</version>
		</dependency>
		
		<!-- [ 스프링 - MyBatis SQL 로그 설정 ] -->
		<!-- 6. SQL 로그에 사용할 log4jdbc 라이브러리 -->		
		<!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 -->
		<dependency>
		    <groupId>org.bgee.log4jdbc-log4j2</groupId>
		    <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		    <version>1.16</version>
		</dependency>				
		
		<!-- 7. ajax 활용 시 json 변환을 편리하게 할 jackson 라이브러리 추가 -->
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.17.2</version>
		</dependency>
							
		<!-- 8. 암호화에 사용될 BCryptPasswordEncoder 클래스가 포함된 spring-security-web 라이브러리 -->
		<!-- 참고) spring-security-web 대신 spring-security-crypto 라이브러리 추가 해도됨 -->
		<!-- 주의! JDK 11 기준 5.x.x 버전 까지만 사용 가능 -->		
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
<!-- 		    <version>6.4.1</version> -->
		    <version>5.8.16</version>
		</dependency>
						
		<!-- 9. 자바 메일 관련 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.activation/activation -->
		<dependency>
		    <groupId>javax.activation</groupId>
		    <artifactId>activation</artifactId>
		    <version>1.1.1</version>
		</dependency>
				
		<!-- 
		10. 스프링 JUnit 테스트에 필요한 라이브러리(junit, spring-test)
		   단, JUnit 라이브러리는 기본적으로 스프링에 포함되어 있음 
		   주의! 사용 환경(스프링 버전, 자바 버전 등)에 따라 오류(예외) 발생할 수 있음(버전확인)
		-->		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <!-- 6.2.2 버전은 JDK 11에서 사용불가! 5.x.x 버전 필요(기본 스프링 버전 사용) -->
		    <version>${org.springframework-version}</version>
		    <scope>test</scope>
		</dependency>
			
		<!-- 11. 난수 생성에 활용할 commons-lang3 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.17.0</version>
		</dependency>
		
		<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-crypto</artifactId>
    <version>5.8.16</version>
</dependency>
		
		<!-- 12. LocalDateTime 을 JSON으로 변환하기 위한 작업 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		    <version>2.15.0</version>
		</dependency>
		
		<!-- 파일 처리(업로드 등) 라이브러리(commons-io, commons-fileupload -->		
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.18.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.5</version>
		</dependency>
		

    <!-- Gson 라이브러리 추가 -->
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.8</version> <!-- 최신 버전으로 수정 가능 -->
    </dependency>
    
        <!-- JSON 라이브러리 (Coolsms API 사용) -->
    <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20210307</version>
    </dependency>

    <dependency>
    	<groupId>net.nurigo</groupId>
    	<artifactId>sdk</artifactId>
    	<version>4.3.2</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.springframework/spring-websocket -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-websocket</artifactId>
	    <version>${org.springframework-version}</version>
	</dependency>
	
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<!-- 기본 서블릿 버전이 2.5로 설정되어 있음 -->
		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency> -->
		
		<!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
<!-- 		<dependency> -->
<!-- 		    <groupId>jakarta.servlet</groupId> -->
<!-- 		    <artifactId>jakarta.servlet-api</artifactId> -->
<!-- 		    <version>6.0.0</version> -->
<!-- 		    <scope>provided</scope> -->
<!-- 		</dependency> -->
		
		
		
	<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>4.0.1</version>
		    <scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>        
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                
                	<!-- 자바(JRE) 버전 설정 위치 -->
                	<!-- 버전 변경 후 Maven Update(Alt + F5)수행해야 적용됨 -->
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
             <!-- maven-war-plugin 추가 -->
       <plugin>
    <artifactId>maven-war-plugin</artifactId>
    <version>3.3.2</version>
    <configuration>
        <warSourceDirectory>src/main/webapp</warSourceDirectory>
        <webResources>
            <resource>
                <directory>src/main/webapp/resources/productImg</directory>
                <targetPath>productImg</targetPath>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </webResources>
    </configuration>
</plugin>
    </plugins>
        
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.apache.maven.plugins
        								</groupId>
        								<artifactId>
        									maven-resources-plugin
        								</artifactId>
        								<versionRange>
        									[2.6,)
        								</versionRange>
        								<goals>
        									<goal>testResources</goal>
        									<goal>resources</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>
</project>
