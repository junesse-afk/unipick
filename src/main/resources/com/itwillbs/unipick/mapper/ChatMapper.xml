<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.unipick.mapper.ChatMapper">

    
    <!-- 채팅방 목록 조회 (구매자용) -->
    <select id="getBuyerChatList" parameterType="String" resultType="map">
        SELECT c.cht_id, c.buy_em, c.sel_id, 
               cd.chd_ms as last_message, cd.chd_st as last_date, cd.chd_sd as last_sender,
               b.buy_nm, s.sel_nm
        FROM chats c
        LEFT JOIN (
            SELECT cht_id, chd_ms, chd_st, chd_sd
            FROM chat_details
            WHERE (cht_id, chd_id) IN (
                SELECT cht_id, MAX(chd_id)
                FROM chat_details
                GROUP BY cht_id
            )
        ) cd ON c.cht_id = cd.cht_id
        LEFT JOIN buyers b ON c.buy_em = b.buy_em
        LEFT JOIN sellers s ON c.sel_id = s.sel_id
        WHERE c.buy_em = #{buy_em}
        ORDER BY cd.chd_st DESC
    </select>
    
    <!-- 채팅방 목록 조회 (판매자용) -->
    <select id="getSellerChatList" parameterType="String" resultType="map">
        SELECT c.cht_id, c.buy_em, c.sel_id, 
               cd.chd_ms as last_message, cd.chd_st as last_date, cd.chd_sd as last_sender,
               b.buy_nm, s.sel_nm
        FROM chats c
        LEFT JOIN (
            SELECT cht_id, chd_ms, chd_st, chd_sd
            FROM chat_details
            WHERE (cht_id, chd_id) IN (
                SELECT cht_id, MAX(chd_id)
                FROM chat_details
                GROUP BY cht_id
            )
        ) cd ON c.cht_id = cd.cht_id
        LEFT JOIN buyers b ON c.buy_em = b.buy_em
        LEFT JOIN sellers s ON c.sel_id = s.sel_id
        WHERE c.sel_id = #{sel_id}
        ORDER BY cd.chd_st DESC
    </select>
    
    <!-- 채팅방 상세 정보 조회 -->
    <select id="getChatRoom" parameterType="int" resultType="map">
        SELECT c.cht_id, c.buy_em, c.sel_id,
               b.buy_nm, s.sel_nm
        FROM chats c
        LEFT JOIN buyers b ON c.buy_em = b.buy_em
        LEFT JOIN sellers s ON c.sel_id = s.sel_id
        WHERE c.cht_id = #{cht_id}
    </select>
    
    <!-- 채팅방 존재 여부 확인 -->
    <select id="checkChatRoom" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM chats
        WHERE buy_em = #{buy_em} AND sel_id = #{sel_id}
    </select>
    
    <!-- 채팅방 생성 -->
    <insert id="createChatRoom" parameterType="map" useGeneratedKeys="true" keyProperty="cht_id" keyColumn="cht_id">
        <selectKey keyProperty="cht_id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO chats (buy_em, sel_id)
        VALUES (#{buy_em}, #{sel_id})
    </insert>
    
    <!-- 채팅방 ID 조회 -->
    <select id="getChatRoomId" parameterType="map" resultType="int">
        SELECT IFNULL(cht_id, 0)
        FROM chats
        WHERE buy_em = #{buy_em} AND sel_id = #{sel_id}
        LIMIT 1
    </select>
    
    <!-- 메시지 목록 조회 -->
    <select id="getChatMessages" parameterType="int" resultType="map">
        SELECT chd_id, cht_id, chd_ms, chd_st, chd_sd
        FROM chat_details
        WHERE cht_id = #{cht_id}
        ORDER BY chd_st ASC
    </select>
    
    <!-- 메시지 전송 -->
    <insert id="sendMessage" parameterType="map">
        INSERT INTO chat_details (cht_id, chd_ms, chd_sd)
        VALUES (#{cht_id}, #{chd_ms}, #{sender})
    </insert>
    
    <!-- 판매자 검색 -->
    <select id="searchSellers" parameterType="String" resultType="map">
        SELECT sel_id, sel_nm, sel_st
        FROM sellers
        WHERE sel_nm LIKE CONCAT('%', #{searchTerm}, '%')
           OR sel_id LIKE CONCAT('%', #{searchTerm}, '%')
        ORDER BY sel_nm ASC
        LIMIT 10
    </select>
    
    <!-- 채팅방 판매자 신고 -->
    <insert id="reportSeller" parameterType="map">
        INSERT INTO report (
            buy_em, 
            sel_id, 
            rpt_tg, 
            rpt_rs, 
            rpt_dt, 
            rpt_st
        ) VALUES (
            #{buy_em}, 
            #{sel_id}, 
            #{rpt_tg}, 
            #{rpt_rs}, 
            NOW(), 
            #{rpt_st}
        )
    </insert>
    
    <!-- 채팅방 구매자 신고 -->
    <insert id="reportBuyer" parameterType="map">
        INSERT INTO report (
            buy_em, 
            sel_id, 
            rpt_tg, 
            rpt_rs, 
            rpt_dt, 
            rpt_st
        ) VALUES (
            #{buy_em}, 
            #{sel_id}, 
            #{rpt_tg}, 
            #{rpt_rs}, 
            NOW(), 
            #{rpt_st}
        )
    </insert>
    
    <!-- 채팅방 신고 내역 조회 -->
    <select id="getChatReports" parameterType="int" resultType="map">
        SELECT r.*, 
               c.code_nm as status_name,
               b.buy_nm,
               s.sel_nm
        FROM report r
        INNER JOIN chats ch ON r.buy_em = ch.buy_em AND r.sel_id = ch.sel_id
        LEFT JOIN common_detail c ON r.rpt_st = c.detail_code AND c.code_cd = 'RS'
        LEFT JOIN buyers b ON r.buy_em = b.buy_em
        LEFT JOIN sellers s ON r.sel_id = s.sel_id
        WHERE ch.cht_id = #{cht_id}
        ORDER BY r.rpt_dt DESC
    </select>
    
    <!-- 새 메시지 개수 확인 (구매자용) -->
    <select id="getNewMessageCountForBuyer" parameterType="String" resultType="int">
        SELECT COUNT(*) 
        FROM chat_details cd
        JOIN chats c ON cd.cht_id = c.cht_id
        WHERE c.buy_em = #{buy_em}
          AND cd.chd_sd != #{buy_em}
          AND cd.chd_st > (
              SELECT IFNULL(last_checked_time, '2000-01-01 00:00:00')
              FROM buyer_last_checked 
              WHERE buy_em = #{buy_em}
          )
    </select>
    
    <!-- 마지막 확인 시간 업데이트 (구매자용) -->
    <insert id="updateLastCheckedTime" parameterType="String">
        INSERT INTO buyer_last_checked (buy_em, last_checked_time)
        VALUES (#{buy_em}, NOW())
        ON DUPLICATE KEY UPDATE last_checked_time = NOW()
    </insert>
    
    <!-- 새 메시지 개수 확인 (판매자용) -->
    <select id="getNewMessageCountForSeller" parameterType="String" resultType="int">
        SELECT COUNT(*) 
        FROM chat_details cd
        JOIN chats c ON cd.cht_id = c.cht_id
        WHERE c.sel_id = #{sel_id}
          AND cd.chd_sd != #{sel_id}
          AND cd.chd_st > (
              SELECT IFNULL(last_checked_time, '2000-01-01 00:00:00')
              FROM seller_last_checked 
              WHERE sel_id = #{sel_id}
          )
    </select>
    
    <!-- 마지막 확인 시간 업데이트 (판매자용) -->
    <insert id="updateSellerLastCheckedTime" parameterType="String">
        INSERT INTO seller_last_checked (sel_id, last_checked_time)
        VALUES (#{sel_id}, NOW())
        ON DUPLICATE KEY UPDATE last_checked_time = NOW()
    </insert>
</mapper> 